apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.24.0 (HEAD)
    traefik.enable: "true"
    traefik.http.routers.api-gw.rule: PathPrefix(`/`)
    traefik.http.services.api-gw.loadbalancer.server.port: "3000"
  labels:
    io.kompose.service: service-gateway
  name: service-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: service-gateway
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.24.0 (HEAD)
        traefik.enable: "true"
        traefik.http.routers.api-gw.rule: PathPrefix(`/`)
        traefik.http.services.api-gw.loadbalancer.server.port: "3000"
      labels:
        io.kompose.network/internal: "true"
        io.kompose.service: service-gateway
    spec:
      containers:
        - env:
            - name: CACHER
              valueFrom:
                configMapKeyRef:
                  key: CACHER
                  name: docker-compose-env
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET
                  name: docker-compose-env
            - name: LOGGER
              valueFrom:
                configMapKeyRef:
                  key: LOGGER
                  name: docker-compose-env
            - name: LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  key: LOGLEVEL
                  name: docker-compose-env
            - name: MINIO_PASS
              valueFrom:
                configMapKeyRef:
                  key: MINIO_PASS
                  name: docker-compose-env
            - name: MINIO_URL
              valueFrom:
                configMapKeyRef:
                  key: MINIO_URL
                  name: docker-compose-env
            - name: MINIO_USER
              valueFrom:
                configMapKeyRef:
                  key: MINIO_USER
                  name: docker-compose-env
            - name: MONGO_URL
              valueFrom:
                configMapKeyRef:
                  key: MONGO_URL
                  name: docker-compose-env
            - name: NAMESPACE
              valueFrom:
                configMapKeyRef:
                  key: NAMESPACE
                  name: docker-compose-env
            - name: PORT
              value: "3000"
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  key: REDIS_URL
                  name: docker-compose-env
            - name: SERVICEDIR
              valueFrom:
                configMapKeyRef:
                  key: SERVICEDIR
                  name: docker-compose-env
            - name: SERVICES
              value: gateway
            - name: STATIC_URL
              valueFrom:
                configMapKeyRef:
                  key: STATIC_URL
                  name: docker-compose-env
            - name: TRANSPORTER
              valueFrom:
                configMapKeyRef:
                  key: TRANSPORTER
                  name: docker-compose-env
          image: moonrailgun/tailchat-server
          name: service-gateway
          resources: {}
      restartPolicy: Always
status: {}
